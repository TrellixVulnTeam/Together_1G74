@mixin tablet {
  @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {
    @content;
  }
}

@mixin tabletAndBigger {
  @media (min-width: #{$tablet-width}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$desktop-width}) {
    @content;
  }
}

/* Animation */
@mixin gradient {
	0% {
		background-position: 0% 50%;
	}
	50% {
		background-position: 100% 50%;
	}
	100% {
		background-position: 0% 50%;
	}
}

@keyframes nudge {
  0%, 100% {
    transform: translate(0, 0);
  }
  
  50% {
    transform: translate(0px, 0);
  }
  
  80% {
    transform: translate(-10px, 0);
  }
}


@mixin fontSize($size) {
  font-size: $size; 
  font-size: calculateRem($size);
}

@mixin width($size) {
  width: $size; 
  width: calculateRem($size);
}

@mixin rem($property, $px-values) {
  	// Convert the baseline into rems
  	$baseline-rem: $baseline-px / 1rem * 1;
  	// Print the first line in pixel values
  	#{$property}: $px-values;
  	// If there is only one (numeric) value, return the property/value line for it.
  	@if type-of($px-values) == "number" {
    	#{$property}: $px-values / $baseline-rem; 
    }
  	@else {
    	// Create an empty list that we can dump values into
    	$rem-values: ();
   		@each $value in $px-values {
      		// If the value is zero or not a number, return it
      		@if $value == 0 or type-of( $value ) != "number" {
        		$rem-values: append($rem-values, $value); 
        	}
      		@else {
        		$rem-values: append($rem-values, $value / $baseline-rem); 
        	} 
        }
    	// Return the property and its list of converted values
    	#{$property}: $rem-values; 
	} 
}